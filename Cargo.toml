[package]
name    = "variant_myth"
version = "0.1.0"
authors = [
	"Pierre Marijon <pierre@marijon.fr>"
]

description  = "A variant annotater."
edition      = "2021"
rust-version = "1.74"

homepage      = "https://natir.github.io/variant-myth"
repository    = "https://github.com/natir/variant-myth"
documentation = "https://natir.github.io/variant-myth"

readme       = "Readme.md"
license-file = "LICENSE"


[[bin]]
name = "variant_myth"
path = "src/main.rs"
required-features = ["cli"]

[dependencies]
# Specific
ahash          = { version = "0.8", features = ["compile-time-rng"] }
bstr           = { version = "1", features = ["serde"] }
coitrees       = { version = "0.4" }
enumflags2     = { version = "0.7" }

# Other
derive_builder   = { version = "0.20" }

# Multi-threading
rayon          = { version = "1", optional = true }

# Input Output management
csv            = { version = "1" }
niffler        = { version = "2", features = ["bzip2", "lzma", "gz", "bgz"] }
noodles        = { version = "0.87", features = ["fasta"] }
arrow          = { version = "54", optional = true }
parquet        = { version = "54", optional = true }
serde_json     = { version = "1", features = ["preserve_order"], optional = true }
serde          = { version = "1", features = ["derive"], optional = true }

# CLI management
clap           = { version = "4", features = ["derive"], optional = true }

# Error management
thiserror      = { version = "2" }
anyhow         = { version = "1" }

# Logging and error management
log            = { version = "0.4" }
stderrlog      = { version = "0.5" }

[dev-dependencies]
## Benchmark management
criterion      = { version = "0.5" }

## Functional test
biotest        = { version = "0.2", features = ["sequence", "vcf", "fasta"] }
assert_cmd     = { version = "2" }
tempfile       = { version = "3" }


[features]
default     = ["cli", "out_parquet"]

cli         = ["dep:clap"]
parallel    = ["dep:rayon"]

# output feature
out_parquet = ["dep:arrow", "dep:parquet"]
out_json    = ["dep:serde", "dep:serde_json"]

bench       = []


[profile.release]
lto             = 'thin'
opt-level       = 3
overflow-checks = false
panic           = 'abort'
incremental     = false


[profile.profiling]
inherits = "release"
debug    = true
